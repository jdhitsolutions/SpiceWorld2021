<?xml version="1.0" encoding="UTF-8"?>
<!--
Format type data generated 08/03/2021 10:54:44 by THINKP1\Jeff

This file was created using the New-PSFormatXML command that is part
of the PSScriptTools module.

https://github.com/jdhitsolutions/PSScriptTools
-->
<Configuration>
  <ViewDefinitions>
    <View>
      <!--Created 08/03/2021 10:54:44 by THINKP1\Jeff-->
      <Name>default</Name>
      <ViewSelectedBy>
        <TypeName>CompanyServerinfo</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <!--
            You can also use a scriptblock to define a custom property name.
            You must have a Label tag.
            <ScriptBlock>$_.machinename.toUpper()</ScriptBlock>
            <Label>Computername</Label>
        -->
        <PropertyName>Computername</PropertyName>
      </GroupBy>
      <TableControl>
        <!--Delete the AutoSize node if you want to use the defined widths.
        <AutoSize />-->
        <TableHeaders>
          <TableColumnHeader>
            <Label>OperatingSystem</Label>
            <Width>25</Width>
            <Alignment>left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>TopProcesses</Label>
            <Width>51</Width>
            <Alignment>left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>FreeDiskGB</Label>
            <Width>10</Width>
            <Alignment>right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>FreeMemGB</Label>
            <Width>9</Width>
            <Alignment>right</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <Wrap />
            <TableColumnItems>
              <!--
            By default the entries use property names, but you can replace them with scriptblocks.
            <ScriptBlock>$_.foo /1mb -as [int]</ScriptBlock>
               -->
              <TableColumnItem>
                <PropertyName>OperatingSystem</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.TopProcesses.name -join ","</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[math]::round($_.FreeDiskGB,4)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.FreeMemoryGB -as [int]</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <!--Created 08/10/2021 10:31:56 by PROSPERO\Jeff-->
      <Name>process</Name>
      <ViewSelectedBy>
        <TypeName>companyServerInfo</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <!--
            You can also use a scriptblock to define a custom property name.
            You must have a Label tag.
            <ScriptBlock>$_.machinename.toUpper()</ScriptBlock>
            <Label>Computername</Label>

            Use <Label> to set the displayed value.
-->
        <PropertyName>Computername</PropertyName>
        <Label>Computername</Label>
      </GroupBy>
      <TableControl>
        <!--Delete the AutoSize node if you want to use the defined widths.-->
        <AutoSize />
        <!-- This view does not use the table header-->
        <HideTableHeaders />
        <TableHeaders>
          <TableColumnHeader>
            <Label>Processes</Label>
            <Width>80</Width>
            <Alignment>left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <Wrap />
            <TableColumnItems>
              <!--
            By default the entries use property names, but you can replace them with scriptblocks.
            <ScriptBlock>$_.foo /1mb -as [int]</ScriptBlock>
-->
              <TableColumnItem>
                <ScriptBlock>
                ($_.TopProcesses |
                Format-Table -property ProcessID,Name,HandleCount,WorkingSetSize,CreationDate |
                Out-String).Trim()
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <!--Created 08/10/2021 10:52:01 by PROSPERO\Jeff-->
      <Name>os</Name>
      <ViewSelectedBy>
        <TypeName>companyServerInfo</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <!--
            You can also use a scriptblock to define a custom property name.
            You must have a Label tag.
            <ScriptBlock>$_.machinename.toUpper()</ScriptBlock>
            <Label>Computername</Label>

            Use <Label> to set the displayed value.
        <PropertyName>OperatingSystem</PropertyName>
-->
        <ScriptBlock>
          <!-- use ANSI to highlight servers-->
            if ($host.name -match 'console|code') {
              $os = $_.OperatingSystem
              Switch -regex ($os) {

              "Server\s2016" {"$([char]27)[38;5;47m$($os)$([char]27)[0m"}
              "Server\s2019" {"$([char]27)[38;5;200m$($os)$([char]27)[0m"}
              "Windows\s11" {"$([char]27)[38;5;86m$($os)$([char]27)[0m"}
              Default {$os}
              }
            }
            else {
              $_.OperatingSystemshow
            }
        </ScriptBlock>
        <Label>OperatingSystem</Label>
      </GroupBy>
      <TableControl>
        <!--Delete the AutoSize node if you want to use the defined widths.
        <AutoSize />-->
        <TableHeaders>
          <TableColumnHeader>
            <Label>Computername</Label>
            <Width>15</Width>
            <Alignment>left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>FreeMemGB</Label>
            <Width>12</Width>
            <Alignment>right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ReportDate</Label>
            <Width>24</Width>
            <Alignment>left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <!--
            By default the entries use property names, but you can replace them with scriptblocks.
            <ScriptBlock>$_.foo /1mb -as [int]</ScriptBlock>
-->
              <TableColumnItem>
                <PropertyName>Computername</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>[math]::Round($_.FreeMemoryGB,4)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0:d}" -f $_.ReportDate</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
  </ViewDefinitions>
</Configuration>